"""db init

Revision ID: 6b392b2f11a0
Revises: 
Create Date: 2025-07-28 10:12:59.760220

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6b392b2f11a0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dm_auto_reply_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('instagram_user_id', sa.String(length=255), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('last_processed_dm_id', sa.String(length=255), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_dm_auto_reply_status_id'), 'dm_auto_reply_status', ['id'], unique=False)
    op.create_index(op.f('ix_dm_auto_reply_status_instagram_user_id'), 'dm_auto_reply_status', ['instagram_user_id'], unique=True)
    op.create_table('instagram_auto_reply_log',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.String(), nullable=False),
    sa.Column('instagram_user_id', sa.String(), nullable=False),
    sa.Column('replied_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_instagram_auto_reply_log_comment_id'), 'instagram_auto_reply_log', ['comment_id'], unique=True)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_superuser', sa.Boolean(), nullable=True),
    sa.Column('avatar_url', sa.String(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('last_login', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('global_auto_reply_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('instagram_user_id', sa.String(length=255), nullable=False),
    sa.Column('enabled', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_global_auto_reply_status_id'), 'global_auto_reply_status', ['id'], unique=False)
    op.create_index(op.f('ix_global_auto_reply_status_instagram_user_id'), 'global_auto_reply_status', ['instagram_user_id'], unique=False)
    op.create_index(op.f('ix_global_auto_reply_status_user_id'), 'global_auto_reply_status', ['user_id'], unique=False)
    op.create_table('social_accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('platform', sa.String(), nullable=False),
    sa.Column('platform_user_id', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('display_name', sa.String(), nullable=True),
    sa.Column('access_token', sa.Text(), nullable=False),
    sa.Column('refresh_token', sa.Text(), nullable=True),
    sa.Column('token_expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('profile_picture_url', sa.String(), nullable=True),
    sa.Column('follower_count', sa.Integer(), nullable=True),
    sa.Column('account_type', sa.String(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('platform_data', sa.JSON(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_connected', sa.Boolean(), nullable=True),
    sa.Column('last_sync_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('connected_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_social_accounts_id'), 'social_accounts', ['id'], unique=False)
    op.create_table('strategy_plans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('goal', sa.String(), nullable=True),
    sa.Column('theme', sa.String(), nullable=True),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('time_slot', sa.String(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('automation_rules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('social_account_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('rule_type', sa.Enum('AUTO_REPLY', 'AUTO_POST', 'AUTO_DM', 'AUTO_FOLLOW', 'AUTO_LIKE', 'AUTO_COMMENT', 'AUTO_REPLY_MESSAGE', name='ruletype'), nullable=False),
    sa.Column('trigger_type', sa.Enum('KEYWORD', 'MENTION', 'HASHTAG', 'TIME_BASED', 'ENGAGEMENT_BASED', 'FOLLOWER_BASED', name='triggertype'), nullable=False),
    sa.Column('trigger_conditions', sa.JSON(), nullable=False),
    sa.Column('actions', sa.JSON(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('daily_limit', sa.Integer(), nullable=True),
    sa.Column('daily_count', sa.Integer(), nullable=True),
    sa.Column('total_executions', sa.Integer(), nullable=True),
    sa.Column('active_hours_start', sa.String(), nullable=True),
    sa.Column('active_hours_end', sa.String(), nullable=True),
    sa.Column('active_days', sa.JSON(), nullable=True),
    sa.Column('timezone', sa.String(), nullable=True),
    sa.Column('success_count', sa.Integer(), nullable=True),
    sa.Column('error_count', sa.Integer(), nullable=True),
    sa.Column('last_execution_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_success_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_error_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['social_account_id'], ['social_accounts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_automation_rules_id'), 'automation_rules', ['id'], unique=False)
    op.create_table('bulk_composer_content',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('social_account_id', sa.Integer(), nullable=False),
    sa.Column('caption', sa.Text(), nullable=False),
    sa.Column('media_file', sa.Text(), nullable=True),
    sa.Column('media_filename', sa.String(length=255), nullable=True),
    sa.Column('media_generated', sa.Boolean(), nullable=True),
    sa.Column('scheduled_date', sa.String(length=10), nullable=False),
    sa.Column('scheduled_time', sa.String(length=5), nullable=False),
    sa.Column('scheduled_datetime', sa.DateTime(timezone=True), nullable=False),
    sa.Column('schedule_batch_id', sa.String(length=64), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('facebook_post_id', sa.String(length=255), nullable=True),
    sa.Column('publish_attempts', sa.Integer(), nullable=True),
    sa.Column('last_publish_attempt', sa.DateTime(timezone=True), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['social_account_id'], ['social_accounts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_bulk_composer_content_id'), 'bulk_composer_content', ['id'], unique=False)
    op.create_index(op.f('ix_bulk_composer_content_schedule_batch_id'), 'bulk_composer_content', ['schedule_batch_id'], unique=False)
    op.create_table('posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('social_account_id', sa.Integer(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('post_type', sa.Enum('TEXT', 'IMAGE', 'VIDEO', 'REEL', 'LINK', 'CAROUSEL', name='posttype'), nullable=True),
    sa.Column('media_urls', sa.JSON(), nullable=True),
    sa.Column('link_url', sa.String(), nullable=True),
    sa.Column('hashtags', sa.JSON(), nullable=True),
    sa.Column('status', sa.Enum('DRAFT', 'SCHEDULED', 'PUBLISHED', 'FAILED', 'CANCELLED', name='poststatus'), nullable=True),
    sa.Column('scheduled_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('platform_post_id', sa.String(), nullable=True),
    sa.Column('platform_response', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('likes_count', sa.Integer(), nullable=True),
    sa.Column('comments_count', sa.Integer(), nullable=True),
    sa.Column('shares_count', sa.Integer(), nullable=True),
    sa.Column('views_count', sa.Integer(), nullable=True),
    sa.Column('engagement_rate', sa.String(), nullable=True),
    sa.Column('is_auto_post', sa.Boolean(), nullable=True),
    sa.Column('auto_post_config', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['social_account_id'], ['social_accounts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_posts_id'), 'posts', ['id'], unique=False)
    op.create_table('scheduled_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('social_account_id', sa.Integer(), nullable=False),
    sa.Column('prompt', sa.Text(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('media_urls', sa.JSON(), nullable=True),
    sa.Column('video_url', sa.String(), nullable=True),
    sa.Column('post_type', sa.Enum('PHOTO', 'CAROUSEL', 'REEL', name='posttype_new'), nullable=False),
    sa.Column('post_id', sa.String(), nullable=True),
    sa.Column('platform', sa.String(length=20), nullable=False),
    sa.Column('post_time', sa.String(length=5), nullable=False),
    sa.Column('frequency', sa.Enum('DAILY', 'WEEKLY', 'MONTHLY', name='frequencytype'), nullable=False),
    sa.Column('scheduled_datetime', sa.DateTime(timezone=True), nullable=True),
    sa.Column('strategy_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('last_executed', sa.DateTime(timezone=True), nullable=True),
    sa.Column('next_execution', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['social_account_id'], ['social_accounts.id'], ),
    sa.ForeignKeyConstraint(['strategy_id'], ['strategy_plans.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_scheduled_posts_id'), 'scheduled_posts', ['id'], unique=False)
    op.create_index(op.f('ix_scheduled_posts_post_id'), 'scheduled_posts', ['post_id'], unique=False)
    op.create_table('single_instagram_posts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('social_account_id', sa.Integer(), nullable=False),
    sa.Column('post_type', sa.String(length=20), nullable=False),
    sa.Column('media_url', sa.ARRAY(sa.Text()), nullable=True),
    sa.Column('caption', sa.Text(), nullable=True),
    sa.Column('use_ai_image', sa.Boolean(), nullable=True),
    sa.Column('use_ai_text', sa.Boolean(), nullable=True),
    sa.Column('platform_post_id', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['social_account_id'], ['social_accounts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_single_instagram_posts_id'), 'single_instagram_posts', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_single_instagram_posts_id'), table_name='single_instagram_posts')
    op.drop_table('single_instagram_posts')
    op.drop_index(op.f('ix_scheduled_posts_post_id'), table_name='scheduled_posts')
    op.drop_index(op.f('ix_scheduled_posts_id'), table_name='scheduled_posts')
    op.drop_table('scheduled_posts')
    op.drop_index(op.f('ix_posts_id'), table_name='posts')
    op.drop_table('posts')
    op.drop_index(op.f('ix_bulk_composer_content_schedule_batch_id'), table_name='bulk_composer_content')
    op.drop_index(op.f('ix_bulk_composer_content_id'), table_name='bulk_composer_content')
    op.drop_table('bulk_composer_content')
    op.drop_index(op.f('ix_automation_rules_id'), table_name='automation_rules')
    op.drop_table('automation_rules')
    op.drop_table('strategy_plans')
    op.drop_index(op.f('ix_social_accounts_id'), table_name='social_accounts')
    op.drop_table('social_accounts')
    op.drop_index(op.f('ix_global_auto_reply_status_user_id'), table_name='global_auto_reply_status')
    op.drop_index(op.f('ix_global_auto_reply_status_instagram_user_id'), table_name='global_auto_reply_status')
    op.drop_index(op.f('ix_global_auto_reply_status_id'), table_name='global_auto_reply_status')
    op.drop_table('global_auto_reply_status')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_instagram_auto_reply_log_comment_id'), table_name='instagram_auto_reply_log')
    op.drop_table('instagram_auto_reply_log')
    op.drop_index(op.f('ix_dm_auto_reply_status_instagram_user_id'), table_name='dm_auto_reply_status')
    op.drop_index(op.f('ix_dm_auto_reply_status_id'), table_name='dm_auto_reply_status')
    op.drop_table('dm_auto_reply_status')
    # ### end Alembic commands ###
